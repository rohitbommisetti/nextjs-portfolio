{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/components/sandpack-files.ts"],"sourcesContent":["export const HTML = `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Minimal Blog</title>\n    <link rel=\"stylesheet\" href=\"/styles.css\" />\n  </head>\n  <body>\n    <header class=\"blog-header\">\n      <h1>Minimal Blog</h1>\n    </header>\n    <main>\n      <article class=\"blog-post\">\n        <h2 class=\"post-title\">The Art of CSS</h2>\n        <p class=\"post-content\">\n          Discovering the latest features in CSS can transform the way we design\n          and interact with web content.\n        </p>\n      </article>\n      <article class=\"blog-post\">\n        <h2 class=\"post-title\">Exploring Web Design</h2>\n        <p class=\"post-content\">\n          A journey through the evolution of web design, from static pages to\n          dynamic, responsive experiences.\n        </p>\n      </article>\n    </main>\n    <footer class=\"blog-footer\">\n      <p>&copy; 2023 Minimal Blog</p>\n    </footer>\n  </body>\n</html>`;\n\nexport const CSS = `:root {\n  --main-bg-color: #f3f4f6;\n  --title-color: #262626;\n  --text-color: #525252;\n  --font-family: \"Arial\", sans-serif;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  background-color: var(--main-bg-color);\n  font-family: var(--font-family);\n}\n\n.blog-header,\n.blog-footer {\n  text-align: center;\n  padding: 1rem;\n  background-color: var(--title-color);\n  color: white;\n}\n\n.blog-post {\n  container-type: inline-size;\n  margin: 1rem;\n  padding: 1rem;\n  background-color: white;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\n  & .post-title {\n    color: var(--title-color);\n    margin: 0 0 1rem 0;\n    text-wrap: balance;\n    font-size: 1em;\n  }\n\n  & .post-content {\n    color: var(--text-color);\n  }\n}\n\n@container (min-inline-size: 500px) {\n  .blog-post {\n    padding: 1.5rem;\n\n    & .post-title {\n      font-size: 1.25em;\n    }\n  }\n}`;\n\nexport const Tailwind = `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Minimal Blog</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n  </head>\n  <body class=\"bg-gray-100 font-sans\">\n    <header class=\"text-center text-3xl font-bold py-8 bg-neutral-800 text-white\">\n      <h1>Minimal Blog</h1>\n    </header>\n    <main class=\"w-full px-4\">\n      <article class=\"my-4 p-4 bg-white shadow-md\">\n        <h2 class=\"text-neutral-800 mb-4 font-bold\">The Art of CSS</h2>\n        <p class=\"text-neutral-600 leading-5\">\n          Discovering the latest features in CSS can transform the way we design\n          and interact with web content.\n        </p>\n      </article>\n      <article class=\"my-4 p-4 bg-white shadow-md\">\n        <h2 class=\"text-neutral-800 mb-4 font-bold\">Exploring Web Design</h2>\n        <p class=\"text-neutral-600 leading-5\">\n          A journey through the evolution of web design, from static pages to\n          dynamic, responsive experiences.\n        </p>\n      </article>\n    </main>\n    <footer class=\"text-center py-8 bg-neutral-800 text-white\">\n      <p>&copy; 2023 Minimal Blog</p>\n    </footer>\n  </body>\n</html>`;\n\nexport const stylexIndex = `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Minimal Blog</title>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/index.tsx\"></script>\n  </body>\n</html>\n`;\n\nexport const stylexViteConfig = `import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport { stylexPlugin } from \"vite-plugin-stylex-dev\";\n\nexport default defineConfig({\n  plugins: [react(), stylexPlugin()],\n});\n`;\n\nexport const stylexTokens = `import * as stylex from \"@stylexjs/stylex\";\n\nexport const tokens = stylex.defineVars({\n  bgColor: \"#f3f4f6\",\n  titleColor: \"#262626\",\n  textColor: \"#525252\",\n  fontFamily: 'Arial, sans-serif',\n});\n`;\n\nexport const stylexApp = `import React from \"react\";\nimport * as stylex from \"@stylexjs/stylex\";\nimport { tokens } from \"./tokens.stylex\";\n\nconst styles = stylex.create({\n  body: {\n    backgroundColor: tokens.bgColor,\n    fontFamily: tokens.fontFamily,\n    margin: 0,\n    padding: 0,\n  },\n  header: {\n    fontSize: \"2rem\"\n  },\n  headerFooter: {\n    textAlign: \"center\",\n    padding: \"1rem\",\n    backgroundColor: tokens.titleColor,\n    color: \"white\",\n  },\n  blogPost: {\n    margin: \"1rem\",\n    padding: \"1rem\",\n    backgroundColor: \"white\",\n    boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\n  },\n  postTitle: {\n    color: tokens.titleColor,\n    marginBottom: \"1rem\",\n    fontSize: \"1em\",\n    textWrap: \"balance\"\n  },\n  postContent: {\n    color: tokens.textColor,\n  },\n});\n\nexport default function App() {\n  return (\n    <body {...stylex.props(styles.body)}>\n      <header {...stylex.props(styles.headerFooter)}>\n        <h1 {...stylex.props(styles.header)}>Minimal Blog</h1>\n      </header>\n      <main>\n        <article {...stylex.props(styles.blogPost)}>\n          <h2 {...stylex.props(styles.postTitle)}>The Art of CSS</h2>\n          <p {...stylex.props(styles.postContent)}>\n            Discovering the latest features in CSS can transform the way we\n            design and interact with web content.\n          </p>\n        </article>\n        <article {...stylex.props(styles.blogPost)}>\n          <h2 {...stylex.props(styles.postTitle)}>Exploring Web Design</h2>\n          <p {...stylex.props(styles.postContent)}>\n            A journey through the evolution of web design, from static pages to\n            dynamic, responsive experiences.\n          </p>\n        </article>\n      </main>\n      <footer {...stylex.props(styles.headerFooter)}>\n        <p>&copy; 2023 Minimal Blog</p>\n      </footer>\n    </body>\n  );\n}`;\n"],"names":[],"mappings":";;;;;;;;;AAAO,MAAM,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgCd,CAAC;AAED,MAAM,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAiDnB,CAAC;AAEK,MAAM,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgClB,CAAC;AAED,MAAM,cAAc,CAAC;;;;;;;;;;;;AAY5B,CAAC;AAEM,MAAM,mBAAmB,CAAC;;;;;;;AAOjC,CAAC;AAEM,MAAM,eAAe,CAAC;;;;;;;;AAQ7B,CAAC;AAEM,MAAM,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAgEzB,CAAC"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/components/sandpack.tsx"],"sourcesContent":["'use client';\n\nimport { Sandpack } from '@codesandbox/sandpack-react';\nimport {\n  HTML,\n  CSS,\n  Tailwind,\n  stylexIndex,\n  stylexApp,\n  stylexViteConfig,\n  stylexTokens,\n} from './sandpack-files';\nimport React, { Suspense } from 'react';\n\nclass ErrorBoundary extends React.Component<\n  { fallback: React.ReactNode; children?: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { fallback: React.ReactNode; children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"px-4 py-3 border border-red-700 bg-red-200 rounded p-1 text-sm flex items-center text-red-900 mb-8\">\n          <div className=\"w-full callout\">{this.props.fallback}</div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport function LiveCode({ example }: { example: string }) {\n  let files;\n\n  if (example === 'html') {\n    files = {\n      '/styles.css': {\n        code: CSS,\n        active: true,\n      },\n      '/index.html': HTML,\n    };\n  } else if (example === 'tailwind') {\n    files = {\n      '/index.html': Tailwind,\n    };\n  } else if (example === 'stylex') {\n    return (\n      <Suspense fallback={null}>\n        <ErrorBoundary\n          fallback={'Oops, there was an error loading the CodeSandbox'}\n        >\n          <Sandpack\n            theme=\"auto\"\n            files={{\n              'App.tsx': {\n                code: stylexApp,\n                active: true,\n              },\n              '/tokens.stylex.js': stylexTokens,\n              '/vite.config.ts': stylexViteConfig,\n              '/index.html': {\n                code: stylexIndex,\n                hidden: true,\n              },\n            }}\n            template=\"vite-react-ts\"\n            customSetup={{\n              dependencies: {\n                '@stylexjs/stylex': '^0.3.0',\n              },\n              devDependencies: {\n                'vite-plugin-stylex-dev': 'latest',\n              },\n            }}\n          />\n        </ErrorBoundary>\n      </Suspense>\n    );\n  }\n\n  return (\n    <Suspense fallback={null}>\n      <ErrorBoundary\n        fallback={'Oops, there was an error loading the CodeSandbox.'}\n      >\n        <Sandpack theme=\"auto\" template=\"static\" files={files} />\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAcA,MAAM,sBAAsB,2NAAM,SAAS;IAIzC,YAAY,KAA+D,CAAE;QAC3E,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YAAE,UAAU;QAAM;IACjC;IAEA,OAAO,yBAAyB,KAAK,EAAE;QACrC,OAAO;YAAE,UAAU;QAAK;IAC1B;IAEA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvB,qBACE,mPAAC;gBAAI,WAAU;0BACb,cAAA,mPAAC;oBAAI,WAAU;8BAAkB,IAAI,CAAC,KAAK,CAAC,QAAQ;;;;;;;;;;;QAG1D;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;AACF;AAEO,SAAS,SAAS,EAAE,OAAO,EAAuB;IACvD,IAAI;IAEJ,IAAI,YAAY,QAAQ;QACtB,QAAQ;YACN,eAAe;gBACb,IAAI;gBACJ,QAAQ;YACV;YACA,aAAa;QACf;IACF,OAAO,IAAI,YAAY,YAAY;QACjC,QAAQ;YACN,aAAa;QACf;IACF,OAAO,IAAI,YAAY,UAAU;QAC/B,qBACE;YAAU,UAAU;sBAClB,cAAA,mPAAC;gBACC,UAAU;0BAEV,cAAA;oBACE,OAAM;oBACN,OAAO;wBACL,WAAW;4BACT,IAAI;4BACJ,QAAQ;wBACV;wBACA,mBAAmB;wBACnB,iBAAiB;wBACjB,eAAe;4BACb,IAAI;4BACJ,QAAQ;wBACV;oBACF;oBACA,UAAS;oBACT,aAAa;wBACX,cAAc;4BACZ,oBAAoB;wBACtB;wBACA,iBAAiB;4BACf,0BAA0B;wBAC5B;oBACF;;;;;;;;;;;;;;;;IAKV;IAEA,qBACE;QAAU,UAAU;kBAClB,cAAA,mPAAC;YACC,UAAU;sBAEV,cAAA;gBAAU,OAAM;gBAAO,UAAS;gBAAS,OAAO;;;;;;;;;;;;;;;;AAIxD"}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}