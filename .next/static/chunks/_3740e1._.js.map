{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/investments/buttons.tsx"],"sourcesContent":["'use client';\n\nimport { signIn, signOut } from 'next-auth/react';\n\nexport function SignOut() {\n  return (\n    <button\n      className=\"text-xs text-neutral-700 dark:text-neutral-300 mt-2 mb-6\"\n      onClick={() => signOut()}\n    >\n      Sign out\n    </button>\n  );\n}\n\nexport function SignIn() {\n  return (\n    <button\n      className=\"px-3 py-2 border border-neutral-200 dark:border-neutral-700 bg-neutral-50 dark:bg-neutral-800 rounded p-1 text-sm inline-flex items-center leading-4 text-neutral-900 dark:text-neutral-100 mb-8\"\n      onClick={() => signIn('github')}\n    >\n      <img alt=\"GitHub logo\" src=\"/github-logo.svg\" width=\"20\" height=\"20\" />\n      <div className=\"ml-3\">Sign in with GitHub</div>\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAAA;;;AAIO,SAAS;IACd,qBACE,wLAAC;QACC,WAAU;QACV,SAAS,IAAM;kBAChB;;;;;;AAIL;KATgB;AAWT,SAAS;IACd,qBACE,wLAAC;QACC,WAAU;QACV,SAAS,IAAM,mJAAO;;0BAEtB,wLAAC;gBAAI,KAAI;gBAAc,KAAI;gBAAmB,OAAM;gBAAK,QAAO;;;;;;0BAChE,wLAAC;gBAAI,WAAU;0BAAO;;;;;;;;;;;;AAG5B;MAVgB"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/investments/form.tsx"],"sourcesContent":["'use client';\n\nimport { useRef } from 'react';\nimport { saveGuestbookEntry } from '../db/actions';\nimport { useFormStatus } from 'react-dom';\n\nexport default function Form() {\n  const formRef = useRef<HTMLFormElement>(null);\n\n  return (\n    <form\n      className=\"relative max-w-[500px]\"\n      ref={formRef}\n      action={async (formData) => {\n        await saveGuestbookEntry(formData);\n        formRef.current?.reset();\n      }}\n    >\n      <input\n        aria-label=\"Your message\"\n        placeholder=\"Your message...\"\n        name=\"entry\"\n        type=\"text\"\n        required\n        className=\"pl-4 pr-32 py-2 mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full border-neutral-300 rounded-md bg-gray-100 dark:bg-neutral-800 text-neutral-900 dark:text-neutral-100\"\n      />\n      <SubmitButton />\n    </form>\n  );\n}\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n\n  return (\n    <button\n      className=\"flex items-center justify-center absolute right-1 top-1 px-2 py-1 font-medium h-8 bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded w-16\"\n      disabled={pending}\n      type=\"submit\"\n    >\n      Sign\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AAMe,SAAS;;IACtB,MAAM,UAAU,wKAAwB;IAExC,qBACE,wLAAC;QACC,WAAU;QACV,KAAK;QACL,QAAQ,OAAO;YACb,MAAM,8IAAmB;YACzB,QAAQ,OAAO,EAAE;QACnB;;0BAEA,wLAAC;gBACC,cAAW;gBACX,aAAY;gBACZ,MAAK;gBACL,MAAK;gBACL,QAAQ;gBACR,WAAU;;;;;;0BAEZ,wLAAC;;;;;;;;;;;AAGP;GAvBwB;KAAA;AAyBxB,SAAS;;IACP,MAAM,EAAE,OAAO,EAAE,GAAG;IAEpB,qBACE,wLAAC;QACC,WAAU;QACV,UAAU;QACV,MAAK;kBACN;;;;;;AAIL;IAZS;;;;;MAAA"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@auth/core/errors.js"],"sourcesContent":["export class AuthError extends Error {\n    constructor(message, cause) {\n        if (message instanceof Error) {\n            super(undefined, {\n                cause: { err: message, ...message.cause, ...cause },\n            });\n        }\n        else if (typeof message === \"string\") {\n            if (cause instanceof Error) {\n                cause = { err: cause, ...cause.cause };\n            }\n            super(message, cause);\n        }\n        else {\n            super(undefined, message);\n        }\n        Error.captureStackTrace?.(this, this.constructor);\n        this.name =\n            message instanceof AuthError ? message.name : this.constructor.name;\n    }\n}\n/**\n * @todo\n * One of the database `Adapter` methods failed.\n */\nexport class AdapterError extends AuthError {\n}\n/** @todo */\nexport class AuthorizedCallbackError extends AuthError {\n}\n/**\n * This error occurs when the user cannot finish the sign-in process.\n * Depending on the provider type, this could have happened for multiple reasons.\n *\n * :::tip\n * Check out `[auth][details]` in the error message to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n *\n * For an [OAuth provider](https://authjs.dev/reference/core/providers_oauth), possible causes are:\n * - The user denied access to the application\n * - There was an error parsing the OAuth Profile:\n *   Check out the provider's `profile` or `userinfo.request` method to make sure\n *   it correctly fetches the user's profile.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * For an [Email provider](https://authjs.dev/reference/core/providers_email), possible causes are:\n * - The provided email/token combination was invalid/missing:\n *   Check if the provider's `sendVerificationRequest` method correctly sends the email.\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n *\n * For a [Credentials provider](https://authjs.dev/reference/core/providers_credentials), possible causes are:\n * - The `authorize` method threw an uncaught error:\n *   Check the provider's `authorize` method.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * :::tip\n * Check out `[auth][cause]` in the error message for more details.\n * It will show the original stack trace.\n * :::\n */\nexport class CallbackRouteError extends AuthError {\n}\n/** @todo */\nexport class ErrorPageLoop extends AuthError {\n}\n/** @todo */\nexport class EventError extends AuthError {\n}\n/** @todo */\nexport class InvalidCallbackUrl extends AuthError {\n}\n/** @todo */\nexport class InvalidEndpoints extends AuthError {\n}\n/** @todo */\nexport class InvalidCheck extends AuthError {\n}\n/** @todo */\nexport class JWTSessionError extends AuthError {\n}\n/** @todo */\nexport class MissingAdapter extends AuthError {\n}\n/** @todo */\nexport class MissingAdapterMethods extends AuthError {\n}\n/** @todo */\nexport class MissingAPIRoute extends AuthError {\n}\n/** @todo */\nexport class MissingAuthorize extends AuthError {\n}\n/**\n * Auth.js requires a secret to be set, but none was not found. This is used to encrypt cookies, JWTs and other sensitive data.\n *\n * :::note\n * If you are using a framework like Next.js, we try to automatically infer the secret from the `AUTH_SECRET` environment variable.\n * Alternatively, you can also explicitly set the [`AuthConfig.secret`](https://authjs.dev/reference/core#secret).\n * :::\n *\n *\n * :::tip\n * You can generate a good secret value:\n *  - On Unix systems: type `openssl rand -hex 32` in the terminal\n *  - Or generate one [online](https://generate-secret.vercel.app/32)\n *\n * :::\n */\nexport class MissingSecret extends AuthError {\n}\n/**\n * @todo\n * Thrown when an Email address is already associated with an account\n * but the user is trying an OAuth account that is not linked to it.\n */\nexport class OAuthAccountNotLinked extends AuthError {\n}\n/**\n * Thrown when an OAuth provider returns an error during the sign in process.\n * This could happen for example if the user denied access to the application or there was a configuration error.\n *\n * For a full list of possible reasons, check out the specification [Authorization Code Grant: Error Response](https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1)\n */\nexport class OAuthCallbackError extends AuthError {\n}\n/** @todo */\nexport class OAuthCreateUserError extends AuthError {\n}\n/**\n * This error occurs during an OAuth sign in attempt when the provdier's\n * response could not be parsed. This could for example happen if the provider's API\n * changed, or the [`OAuth2Config.profile`](https://authjs.dev/reference/core/providers_oauth#profile) method is not implemented correctly.\n */\nexport class OAuthProfileParseError extends AuthError {\n}\n/** @todo */\nexport class SessionTokenError extends AuthError {\n}\n/**\n * This error occurs when the user cannot initiate the sign-in process.\n * Depending on the provider type, this could have happened for multiple reasons.\n *\n * :::tip\n * Check out `[auth][details]` in the error message to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n *\n * For an [OAuth provider](https://authjs.dev/reference/core/providers_oauth), possible causes are:\n * - The Authorization Server is not compliant with the [OAuth 2.0 specifcation](https://www.ietf.org/rfc/rfc6749.html)\n *   Check the details in the error message.\n * - A runtime error occurred in Auth.js. This should be reported as a bug.\n *\n * For an [Email provider](https://authjs.dev/reference/core/providers_email), possible causes are:\n * - The email sent from the client is invalid, could not be normalized by [`EmailConfig.normalizeIdentifier`](https://authjs.dev/reference/core/providers_email#normalizeidentifier)\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n *\n */\nexport class SignInError extends AuthError {\n}\n/** @todo */\nexport class SignOutError extends AuthError {\n}\n/**\n * Auth.js was requested to handle an operation that it does not support.\n *\n * See [`AuthAction`](https://authjs.dev/reference/core/types#authaction) for the supported actions.\n */\nexport class UnknownAction extends AuthError {\n}\n/** @todo */\nexport class UnsupportedStrategy extends AuthError {\n}\n/** @todo */\nexport class UntrustedHost extends AuthError {\n}\n/**\n * The user's email/token combination was invalid.\n * This could be because the email/token combination was not found in the database,\n * or because it token has expired. Ask the user to log in again.\n */\nexport class Verification extends AuthError {\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAM,kBAAkB;IAC3B,YAAY,OAAO,EAAE,KAAK,CAAE;QACxB,IAAI,mBAAmB,OAAO;YAC1B,KAAK,CAAC,WAAW;gBACb,OAAO;oBAAE,KAAK;oBAAS,GAAG,QAAQ,KAAK;oBAAE,GAAG,KAAK;gBAAC;YACtD;QACJ,OACK,IAAI,OAAO,YAAY,UAAU;YAClC,IAAI,iBAAiB,OAAO;gBACxB,QAAQ;oBAAE,KAAK;oBAAO,GAAG,MAAM,KAAK;gBAAC;YACzC;YACA,KAAK,CAAC,SAAS;QACnB,OACK;YACD,KAAK,CAAC,WAAW;QACrB;QACA,MAAM,iBAAiB,GAAG,IAAI,EAAE,IAAI,CAAC,WAAW;QAChD,IAAI,CAAC,IAAI,GACL,mBAAmB,YAAY,QAAQ,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI;IAC3E;AACJ;AAKO,MAAM,qBAAqB;AAClC;AAEO,MAAM,gCAAgC;AAC7C;AAwCO,MAAM,2BAA2B;AACxC;AAEO,MAAM,sBAAsB;AACnC;AAEO,MAAM,mBAAmB;AAChC;AAEO,MAAM,2BAA2B;AACxC;AAEO,MAAM,yBAAyB;AACtC;AAEO,MAAM,qBAAqB;AAClC;AAEO,MAAM,wBAAwB;AACrC;AAEO,MAAM,uBAAuB;AACpC;AAEO,MAAM,8BAA8B;AAC3C;AAEO,MAAM,wBAAwB;AACrC;AAEO,MAAM,yBAAyB;AACtC;AAiBO,MAAM,sBAAsB;AACnC;AAMO,MAAM,8BAA8B;AAC3C;AAOO,MAAM,2BAA2B;AACxC;AAEO,MAAM,6BAA6B;AAC1C;AAMO,MAAM,+BAA+B;AAC5C;AAEO,MAAM,0BAA0B;AACvC;AA0BO,MAAM,oBAAoB;AACjC;AAEO,MAAM,qBAAqB;AAClC;AAMO,MAAM,sBAAsB;AACnC;AAEO,MAAM,4BAA4B;AACzC;AAEO,MAAM,sBAAsB;AACnC;AAMO,MAAM,qBAAqB;AAClC"}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/next-auth/lib/client.js"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\nimport { AuthError } from \"@auth/core/errors\";\n/** @todo */\nclass ClientFetchError extends AuthError {\n}\n/** @todo */\nexport class ClientSessionError extends AuthError {\n}\n// ------------------------ Internal ------------------------\n/**\n * If passed 'appContext' via getInitialProps() in _app.js\n * then get the req object from ctx and use that for the\n * req value to allow `fetchData` to\n * work seemlessly in getInitialProps() on server side\n * pages *and* in _app.js.\n * @internal\n */\nexport async function fetchData(path, __NEXTAUTH, logger, req = {}) {\n    const url = `${apiBaseUrl(__NEXTAUTH)}/${path}`;\n    try {\n        const options = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...(req?.headers?.cookie ? { cookie: req.headers.cookie } : {}),\n            },\n        };\n        if (req?.body) {\n            options.body = JSON.stringify(req.body);\n            options.method = \"POST\";\n        }\n        const res = await fetch(url, options);\n        const data = await res.json();\n        if (!res.ok)\n            throw data;\n        return data;\n    }\n    catch (error) {\n        logger.error(new ClientFetchError(error.message, error));\n        return null;\n    }\n}\n/** @internal */\nexport function apiBaseUrl(__NEXTAUTH) {\n    if (typeof window === \"undefined\") {\n        // Return absolute path when called server side\n        return `${__NEXTAUTH.baseUrlServer}${__NEXTAUTH.basePathServer}`;\n    }\n    // Return relative path when called client side\n    return __NEXTAUTH.basePath;\n}\n/** @internal  */\nexport function useOnline() {\n    const [isOnline, setIsOnline] = React.useState(typeof navigator !== \"undefined\" ? navigator.onLine : false);\n    const setOnline = () => setIsOnline(true);\n    const setOffline = () => setIsOnline(false);\n    React.useEffect(() => {\n        window.addEventListener(\"online\", setOnline);\n        window.addEventListener(\"offline\", setOffline);\n        return () => {\n            window.removeEventListener(\"online\", setOnline);\n            window.removeEventListener(\"offline\", setOffline);\n        };\n    }, []);\n    return isOnline;\n}\n/**\n * Returns the number of seconds elapsed since January 1, 1970 00:00:00 UTC.\n * @internal\n */\nexport function now() {\n    return Math.floor(Date.now() / 1000);\n}\n/**\n * Returns an `URL` like object to make requests/redirects from server-side\n * @internal\n */\nexport function parseUrl(url) {\n    const defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n    if (url && !url.startsWith(\"http\")) {\n        url = `https://${url}`;\n    }\n    const _url = new URL(url ?? defaultUrl);\n    const path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname)\n        // Remove trailing slash\n        .replace(/\\/$/, \"\");\n    const base = `${_url.origin}${path}`;\n    return {\n        origin: _url.origin,\n        host: _url.host,\n        path,\n        base,\n        toString: () => base,\n    };\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;AAGA,UAAU,GACV,MAAM;AACN;AAEO,MAAM;AACb;AAUO,eAAe,UAAU,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAC9D,MAAM,MAAM,CAAC,EAAE,WAAW,YAAY,CAAC,EAAE,KAAK,CAAC;IAC/C,IAAI;QACA,MAAM,UAAU;YACZ,SAAS;gBACL,gBAAgB;gBAChB,GAAI,KAAK,SAAS,SAAS;oBAAE,QAAQ,IAAI,OAAO,CAAC,MAAM;gBAAC,IAAI,CAAC,CAAC;YAClE;QACJ;QACA,IAAI,KAAK,MAAM;YACX,QAAQ,IAAI,GAAG,KAAK,SAAS,CAAC,IAAI,IAAI;YACtC,QAAQ,MAAM,GAAG;QACrB;QACA,MAAM,MAAM,MAAM,MAAM,KAAK;QAC7B,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,IAAI,CAAC,IAAI,EAAE,EACP,MAAM;QACV,OAAO;IACX,EACA,OAAO,OAAO;QACV,OAAO,KAAK,CAAC,IAAI,iBAAiB,MAAM,OAAO,EAAE;QACjD,OAAO;IACX;AACJ;AAEO,SAAS,WAAW,UAAU;IACjC,IAAI,OAAO,WAAW,aAAa;QAC/B,+CAA+C;QAC/C,OAAO,CAAC,EAAE,WAAW,aAAa,CAAC,EAAE,WAAW,cAAc,CAAC,CAAC;IACpE;IACA,+CAA+C;IAC/C,OAAO,WAAW,QAAQ;AAC9B;AAEO,SAAS;IACZ,MAAM,CAAC,UAAU,YAAY,GAAG,8JAAM,QAAQ,CAAC,OAAO,cAAc,cAAc,UAAU,MAAM,GAAG;IACrG,MAAM,YAAY,IAAM,YAAY;IACpC,MAAM,aAAa,IAAM,YAAY;IACrC,8JAAM,SAAS,CAAC;QACZ,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO;YACH,OAAO,mBAAmB,CAAC,UAAU;YACrC,OAAO,mBAAmB,CAAC,WAAW;QAC1C;IACJ,GAAG,EAAE;IACL,OAAO;AACX;AAKO,SAAS;IACZ,OAAO,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;AACnC;AAKO,SAAS,SAAS,GAAG;IACxB,MAAM,aAAa,IAAI,IAAI;IAC3B,IAAI,OAAO,CAAC,IAAI,UAAU,CAAC,SAAS;QAChC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC;IAC1B;IACA,MAAM,OAAO,IAAI,IAAI,OAAO;IAC5B,MAAM,OAAO,CAAC,KAAK,QAAQ,KAAK,MAAM,WAAW,QAAQ,GAAG,KAAK,QAAQ,CACrE,wBAAwB;KACvB,OAAO,CAAC,OAAO;IACpB,MAAM,OAAO,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,KAAK,CAAC;IACpC,OAAO;QACH,QAAQ,KAAK,MAAM;QACnB,MAAM,KAAK,IAAI;QACf;QACA;QACA,UAAU,IAAM;IACpB;AACJ"}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/next-auth/react.js"],"sourcesContent":["/**\n *\n * NextAuth.js methods and components that work in [Client components](https://nextjs.org/docs/app/building-your-application/rendering/client-components) and the [Pages Router](https://nextjs.org/docs/pages).\n *\n * For use in [Server Actions](https://nextjs.org/docs/app/api-reference/functions/server-actions), check out [these methods](https://authjs.dev/guides/upgrade-to-v5#methods)\n *\n * @module react\n */\n\"use client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { apiBaseUrl, ClientSessionError, fetchData, now, parseUrl, useOnline, } from \"./lib/client.js\";\n// This behaviour mirrors the default behaviour for getting the site name that\n// happens server side in server/index.js\n// 1. An empty value is legitimate when the code is being invoked client side as\n//    relative URLs are valid in that context and so defaults to empty.\n// 2. When invoked server side the value is picked up from an environment\n//    variable and defaults to 'http://localhost:3000'.\nconst __NEXTAUTH = {\n    baseUrl: parseUrl(process.env.NEXTAUTH_URL ?? process.env.VERCEL_URL).origin,\n    basePath: parseUrl(process.env.NEXTAUTH_URL).path,\n    baseUrlServer: parseUrl(process.env.NEXTAUTH_URL_INTERNAL ??\n        process.env.NEXTAUTH_URL ??\n        process.env.VERCEL_URL).origin,\n    basePathServer: parseUrl(process.env.NEXTAUTH_URL_INTERNAL ?? process.env.NEXTAUTH_URL).path,\n    _lastSync: 0,\n    _session: undefined,\n    _getSession: () => { },\n};\nfunction broadcast() {\n    if (typeof BroadcastChannel !== \"undefined\") {\n        return new BroadcastChannel(\"next-auth\");\n    }\n    return {\n        postMessage: () => { },\n        addEventListener: () => { },\n        removeEventListener: () => { },\n    };\n}\n// TODO:\nconst logger = {\n    debug: console.debug,\n    error: console.error,\n    warn: console.warn,\n};\nexport const SessionContext = React.createContext?.(undefined);\n/**\n * React Hook that gives you access to the logged in user's session data and lets you modify it.\n *\n * :::info\n * You will likely not need `useSession` if you are using the [Next.js App Router (`app/`)](https://nextjs.org/blog/next-13-4#nextjs-app-router).\n * :::\n */\nexport function useSession(options) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    // @ts-expect-error Satisfy TS if branch on line below\n    const value = React.useContext(SessionContext);\n    if (!value && process.env.NODE_ENV !== \"production\") {\n        throw new Error(\"[next-auth]: `useSession` must be wrapped in a <SessionProvider />\");\n    }\n    const { required, onUnauthenticated } = options ?? {};\n    const requiredAndNotLoading = required && value.status === \"unauthenticated\";\n    React.useEffect(() => {\n        if (requiredAndNotLoading) {\n            const url = `/api/auth/signin?${new URLSearchParams({\n                error: \"SessionRequired\",\n                callbackUrl: window.location.href,\n            })}`;\n            if (onUnauthenticated)\n                onUnauthenticated();\n            else\n                window.location.href = url;\n        }\n    }, [requiredAndNotLoading, onUnauthenticated]);\n    if (requiredAndNotLoading) {\n        return {\n            data: value.data,\n            update: value.update,\n            status: \"loading\",\n        };\n    }\n    return value;\n}\nexport async function getSession(params) {\n    const session = await fetchData(\"session\", __NEXTAUTH, logger, params);\n    if (params?.broadcast ?? true) {\n        broadcast().postMessage({\n            event: \"session\",\n            data: { trigger: \"getSession\" },\n        });\n    }\n    return session;\n}\n/**\n * Returns the current Cross-Site Request Forgery Token (CSRF Token)\n * required to make requests that changes state. (e.g. signing in or out, or updating the session).\n *\n * [CSRF Prevention: Double Submit Cookie](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie)\n * @internal\n */\nexport async function getCsrfToken() {\n    const response = await fetchData(\"csrf\", __NEXTAUTH, logger);\n    return response?.csrfToken;\n}\n/**\n * Returns a client-safe configuration object of the currently\n * available providers.\n * @internal\n */\nexport async function getProviders() {\n    return fetchData(\"providers\", __NEXTAUTH, logger);\n}\n/**\n * Initiate a signin flow or send the user to the signin page listing all possible providers.\n * Handles CSRF protection.\n */\nexport async function signIn(provider, options, authorizationParams) {\n    const { callbackUrl = window.location.href, redirect = true } = options ?? {};\n    const baseUrl = apiBaseUrl(__NEXTAUTH);\n    const providers = await getProviders();\n    if (!providers) {\n        window.location.href = `${baseUrl}/error`;\n        return;\n    }\n    if (!provider || !(provider in providers)) {\n        window.location.href = `${baseUrl}/signin?${new URLSearchParams({\n            callbackUrl,\n        })}`;\n        return;\n    }\n    const isCredentials = providers[provider].type === \"credentials\";\n    const isEmail = providers[provider].type === \"email\";\n    const isSupportingReturn = isCredentials || isEmail;\n    const signInUrl = `${baseUrl}/${isCredentials ? \"callback\" : \"signin\"}/${provider}`;\n    const _signInUrl = `${signInUrl}?${new URLSearchParams(authorizationParams)}`;\n    const res = await fetch(_signInUrl, {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"X-Auth-Return-Redirect\": \"1\",\n        },\n        // @ts-expect-error\n        body: new URLSearchParams({\n            ...options,\n            csrfToken: await getCsrfToken(),\n            callbackUrl,\n        }),\n    });\n    const data = await res.json();\n    // TODO: Do not redirect for Credentials and Email providers by default in next major\n    if (redirect || !isSupportingReturn) {\n        const url = data.url ?? callbackUrl;\n        window.location.href = url;\n        // If url contains a hash, the browser does not reload the page. We reload manually\n        if (url.includes(\"#\"))\n            window.location.reload();\n        return;\n    }\n    const error = new URL(data.url).searchParams.get(\"error\");\n    if (res.ok) {\n        await __NEXTAUTH._getSession({ event: \"storage\" });\n    }\n    return {\n        error,\n        status: res.status,\n        ok: res.ok,\n        url: error ? null : data.url,\n    };\n}\n/**\n * Initiate a signout, by destroying the current session.\n * Handles CSRF protection.\n */\nexport async function signOut(options) {\n    const { callbackUrl = window.location.href } = options ?? {};\n    const baseUrl = apiBaseUrl(__NEXTAUTH);\n    const fetchOptions = {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"X-Auth-Return-Redirect\": \"1\",\n        },\n        // @ts-expect-error\n        body: new URLSearchParams({\n            csrfToken: await getCsrfToken(),\n            callbackUrl,\n        }),\n    };\n    const res = await fetch(`${baseUrl}/signout`, fetchOptions);\n    const data = await res.json();\n    broadcast().postMessage({ event: \"session\", data: { trigger: \"signout\" } });\n    if (options?.redirect ?? true) {\n        const url = data.url ?? callbackUrl;\n        window.location.href = url;\n        // If url contains a hash, the browser does not reload the page. We reload manually\n        if (url.includes(\"#\"))\n            window.location.reload();\n        // @ts-expect-error\n        return;\n    }\n    await __NEXTAUTH._getSession({ event: \"storage\" });\n    return data;\n}\n/**\n * [React Context](https://react.dev/learn/passing-data-deeply-with-context) provider to wrap the app (`pages/`) to make session data available anywhere.\n *\n * When used, the session state is automatically synchronized across all open tabs/windows and they are all updated whenever they gain or lose focus\n * or the state changes (e.g. a user signs in or out) when {@link SessionProviderProps.refetchOnWindowFocus} is `true`.\n *\n * :::info\n * You will likely not need `SessionProvider` if you are using the [Next.js App Router (`app/`)](https://nextjs.org/blog/next-13-4#nextjs-app-router).\n * :::\n */\nexport function SessionProvider(props) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    const { children, basePath, refetchInterval, refetchWhenOffline } = props;\n    if (basePath)\n        __NEXTAUTH.basePath = basePath;\n    /**\n     * If session was `null`, there was an attempt to fetch it,\n     * but it failed, but we still treat it as a valid initial value.\n     */\n    const hasInitialSession = props.session !== undefined;\n    /** If session was passed, initialize as already synced */\n    __NEXTAUTH._lastSync = hasInitialSession ? now() : 0;\n    const [session, setSession] = React.useState(() => {\n        if (hasInitialSession)\n            __NEXTAUTH._session = props.session;\n        return props.session;\n    });\n    /** If session was passed, initialize as not loading */\n    const [loading, setLoading] = React.useState(!hasInitialSession);\n    React.useEffect(() => {\n        __NEXTAUTH._getSession = async ({ event } = {}) => {\n            try {\n                const storageEvent = event === \"storage\";\n                // We should always update if we don't have a client session yet\n                // or if there are events from other tabs/windows\n                if (storageEvent || __NEXTAUTH._session === undefined) {\n                    __NEXTAUTH._lastSync = now();\n                    __NEXTAUTH._session = await getSession({\n                        broadcast: !storageEvent,\n                    });\n                    setSession(__NEXTAUTH._session);\n                    return;\n                }\n                if (\n                // If there is no time defined for when a session should be considered\n                // stale, then it's okay to use the value we have until an event is\n                // triggered which updates it\n                !event ||\n                    // If the client doesn't have a session then we don't need to call\n                    // the server to check if it does (if they have signed in via another\n                    // tab or window that will come through as a \"stroage\" event\n                    // event anyway)\n                    __NEXTAUTH._session === null ||\n                    // Bail out early if the client session is not stale yet\n                    now() < __NEXTAUTH._lastSync) {\n                    return;\n                }\n                // An event or session staleness occurred, update the client session.\n                __NEXTAUTH._lastSync = now();\n                __NEXTAUTH._session = await getSession();\n                setSession(__NEXTAUTH._session);\n            }\n            catch (error) {\n                logger.error(new ClientSessionError(error.message, error));\n            }\n            finally {\n                setLoading(false);\n            }\n        };\n        __NEXTAUTH._getSession();\n        return () => {\n            __NEXTAUTH._lastSync = 0;\n            __NEXTAUTH._session = undefined;\n            __NEXTAUTH._getSession = () => { };\n        };\n    }, []);\n    React.useEffect(() => {\n        const handle = () => __NEXTAUTH._getSession({ event: \"storage\" });\n        // Listen for storage events and update session if event fired from\n        // another window (but suppress firing another event to avoid a loop)\n        // Fetch new session data but tell it to not to fire another event to\n        // avoid an infinite loop.\n        // Note: We could pass session data through and do something like\n        // `setData(message.data)` but that can cause problems depending\n        // on how the session object is being used in the client; it is\n        // more robust to have each window/tab fetch it's own copy of the\n        // session object rather than share it across instances.\n        broadcast().addEventListener(\"message\", handle);\n        return () => broadcast().removeEventListener(\"message\", handle);\n    }, []);\n    React.useEffect(() => {\n        const { refetchOnWindowFocus = true } = props;\n        // Listen for when the page is visible, if the user switches tabs\n        // and makes our tab visible again, re-fetch the session, but only if\n        // this feature is not disabled.\n        const visibilityHandler = () => {\n            if (refetchOnWindowFocus && document.visibilityState === \"visible\")\n                __NEXTAUTH._getSession({ event: \"visibilitychange\" });\n        };\n        document.addEventListener(\"visibilitychange\", visibilityHandler, false);\n        return () => document.removeEventListener(\"visibilitychange\", visibilityHandler, false);\n    }, [props.refetchOnWindowFocus]);\n    const isOnline = useOnline();\n    // TODO: Flip this behavior in next major version\n    const shouldRefetch = refetchWhenOffline !== false || isOnline;\n    React.useEffect(() => {\n        if (refetchInterval && shouldRefetch) {\n            const refetchIntervalTimer = setInterval(() => {\n                if (__NEXTAUTH._session) {\n                    __NEXTAUTH._getSession({ event: \"poll\" });\n                }\n            }, refetchInterval * 1000);\n            return () => clearInterval(refetchIntervalTimer);\n        }\n    }, [refetchInterval, shouldRefetch]);\n    const value = React.useMemo(() => ({\n        data: session,\n        status: loading\n            ? \"loading\"\n            : session\n                ? \"authenticated\"\n                : \"unauthenticated\",\n        async update(data) {\n            if (loading || !session)\n                return;\n            setLoading(true);\n            const newSession = await fetchData(\"session\", __NEXTAUTH, logger, typeof data === \"undefined\"\n                ? undefined\n                : { body: { csrfToken: await getCsrfToken(), data } });\n            setLoading(false);\n            if (newSession) {\n                setSession(newSession);\n                broadcast().postMessage({\n                    event: \"session\",\n                    data: { trigger: \"getSession\" },\n                });\n            }\n            return newSession;\n        },\n    }), [session, loading]);\n    return (\n    // @ts-expect-error\n    _jsx(SessionContext.Provider, { value: value, children: children }));\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 707, "column": 0}, "map": {"version":3,"sources":["../../../../../src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts","/turbopack/[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js"],"names":["createServerReference","id","createServerReferenceImpl","require","callServer"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;+BAMVA,yBAAAA;;;eAAAA;;;;AAAT,SAASA,sBAAsBC,EAAU;IAC9C,iFAAiF;IACjF,+EAA+E;IAC/E,2EAA2E;IAC3E,yJAAyJ;IACzJ,MAAM,EAAED,uBAAuBE,yBAAyB,EAAE,GACxD,6EAIIC;IAGN,OAAOD,0BAA0BD,IAAIG,eAAAA,UAAU;AACjD"}},
    {"offset": {"line": 730, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}